{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["TableRow","Country","TotalConfirmed","TotalDeaths","TotalRecovered","App","props","newApiData","newApiData2","state","items","isLoaded","latestDate","isSortedAsc","isSortedAsc2","isSortedAsc3","filterText","compareBy","bind","sortBy","this","setState","key","a","b","column","newData","sort","uncompareBy","console","log","fetch","then","response","json","data","Countries","sortedData","Date","Global","e","target","value","newArray","filter","toLowerCase","indexOf","map","rowData","toString","id","columnstyle","cursor","numberStyle","textAlign","className","Moment","format","type","placeholder","onChange","onChangeHandler","border","width","style","onClick","item","CountryCode","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e114542a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Moment from 'moment';\n\nconst TableRow = ({ Country, TotalConfirmed, TotalDeaths, TotalRecovered }) => (\n  <tr>\n    <td>{Country}</td>\n    <td>{TotalConfirmed}</td>\n    <td>{TotalDeaths}</td>\n    <td>{TotalRecovered}</td>\n  </tr>\n);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false,\n      latestDate: '',\n      isSortedAsc: false,\n      isSortedAsc2: false,\n      isSortedAsc3: false,\n      filterText: ''\n    };\n    this.compareBy.bind(this);\n    this.sortBy.bind(this);\n  }\n\n  newApiData = [];\n  newApiData2 = [];\n\n  handleUserInput(filterText) {\n    this.setState({\n      filterText: filterText,\n    });\n  }\n  compareBy(key) {\n    return function (a, b) {\n      if (a[key] < b[key]) return -1;\n      if (a[key] > b[key]) return 1;\n      return 0;\n    };\n  }\n  uncompareBy(key) {\n    return function (a, b) {\n      if (a[key] > b[key]) return -1;\n      if (a[key] < b[key]) return 1;\n      return 0;\n    };\n  }\n  sortBy(column, key) {\n    let newData = [...this.state.items];\n    if (key == 1) {\n      this.state.isSortedAsc ? newData.sort(this.uncompareBy(column)) : newData.sort(this.compareBy(column));\n      this.setState({\n        items: newData,\n        isSortedAsc: !this.state.isSortedAsc,\n      });\n    } else if (key == 2) {\n      this.state.isSortedAsc2 ? newData.sort(this.uncompareBy(column)) : newData.sort(this.compareBy(column));\n      this.setState({\n        items: newData,\n        isSortedAsc2: !this.state.isSortedAsc2,\n      });\n    } else if (key == 3) {\n      this.state.isSortedAsc3 ? newData.sort(this.uncompareBy(column)) : newData.sort(this.compareBy(column));\n      this.setState({\n        items: newData,\n        isSortedAsc3: !this.state.isSortedAsc3\n      });\n    }\n    console.log(this.state.isSortedAsc);\n    console.log(this.state.isSortedAsc2);\n    console.log(this.state.isSortedAsc3);\n  }\n\n  componentDidMount() {\n    fetch('https://api.covid19api.com/summary')\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.newApiData = data.Countries;\n\n        let sortedData = data.Countries.sort(function (a, b) {\n          return b.TotalConfirmed - a.TotalConfirmed\n        })\n\n        this.setState({\n          isLoaded: true,\n          items: sortedData,//data.Countries\n          latestDate: data.Date,\n          filterText: ''\n        })\n\n        console.log(data.Countries);\n        console.log(data.Global);\n      });\n  }\n\n  onChangeHandler(e) {\n    console.log(e.target.value);\n    let newArray = this.newApiData.filter((data) => {\n      console.log(data);\n      let searchValue = data.Country.toLowerCase();\n      return searchValue.indexOf(e.target.value) !== -1;\n    });\n    console.log(newArray)\n    this.setState({\n      items: newArray\n    })\n  }\n\n  render() {\n    var { isLoaded, items, latestDate } = this.state;\n    const filterText = this.state.filterText;\n    const rows = this.state.items.map((rowData) => {\n      if ((rowData.Country.toString().indexOf(filterText) && rowData.TotalConfirmed.toString().indexOf(filterText) && rowData.TotalDeaths.toString().indexOf(filterText) && rowData.TotalRecovered.toString().indexOf(filterText)) === -1) {\n        return;\n      }\n      return <TableRow key={rowData.id} {...rowData} />\n    });\n\n    if (!isLoaded) {\n      return (<div>Loading...</div>);\n    } else {\n      const columnstyle = {\n        cursor: \"pointer\"\n      };\n\n      const numberStyle = {\n        textAlign: \"right\"\n      }\n\n      return (\n        <div className=\"App\">\n          <h2>Covid-19 Report</h2>\n          <h3>Latest Date: {Moment(latestDate).format('dddd, MMMM Do YYYY, hh:mm:ss a')}</h3>\n\n          <input type=\"text\" value={this.state.value} placeholder=\"Search by Country Name\" onChange={this.onChangeHandler.bind(this)} />\n          <br /><br />\n\n          <table border=\"1\" width=\"100%\">\n            <thead>\n              <tr>\n                <th width=\"10%\">Country Name</th>\n                <th style={columnstyle} width=\"7%\" onClick={() => this.sortBy('TotalConfirmed', 1)}>Total confirmed cases {this.state.isSortedAsc ? '\\u2193' : '\\u2191'}</th>\n                <th style={columnstyle} width=\"7%\" onClick={() => this.sortBy('TotalDeaths', 2)}>Total death cases {this.state.isSortedAsc2 ? '\\u2193' : '\\u2191'}</th>\n                <th style={columnstyle} width=\"7%\" onClick={() => this.sortBy('TotalRecovered', 3)}>Total recovered cases {this.state.isSortedAsc3 ? '\\u2193' : '\\u2191'}</th>\n              </tr>\n            </thead>\n            <tbody>\n              {items.map(item => (\n                <tr key={item.CountryCode}>\n                  <td>{item.Country}</td>\n                  <td style={numberStyle}>\n                    {item.TotalConfirmed == 0 ? 'Unreported' : item.TotalConfirmed}\n                  </td>\n                  <td style={numberStyle}>\n                    {item.TotalDeaths == 0 ? 'Unreported' : item.TotalDeaths}\n                  </td>\n                  <td style={numberStyle}>\n                    {item.TotalRecovered == 0 ? 'Unreported' : item.TotalRecovered}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}